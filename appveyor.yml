#cache:
#  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
#  - projectA\libs
#  - node_modules                    # local npm modules
#  - '%APPDATA%\npm-cache'             # npm cache
#  - '%USERPROFILE%\.nuget\packages -> **\project.json'  # project.json cache

version: 1.0.{build}-{branch}
shallow_clone: true
branches:
  only:
    - master
    - develop
#   except:
#   - coverity_scan
environment:
  fast_finish: true
  matrix:
  - platform: x86
    os: Visual Studio 2015
    env: BS=bjam GENERATOR="MinGW Makefiles" MEMCHECK=DRMEMORY PLATFROM=x86
    configuration:  Release
    PROJECT_BASE: "C:/projects/cpp_sandbox"

install:
  #- C:\"Program Files (x86)"\"Microsoft Visual Studio 14.0"\VC\vcvarsall.bat %PLATFORM%
  - ps: cd "${env:APPVEYOR_BUILD_FOLDER}"
  - appveyor DownloadFile "http://downloads.sourceforge.net/project/boost/boost/1.61.0/boost_1_61_0.7z?r=&ts=1463825512&use_mirror=netassist"
  - ls -l && 7z x boost_*.7z > nul
  - del boost_*.7z > nul
  - ps: cd "${env:APPVEYOR_BUILD_FOLDER}/boost*/"
  - bootstrap.bat
  - b2 headers
  - set PATH=%PATH%;%CD% # TODO remove
  - set BOOST_ROOT=%CD% 
  - cmd: echo import boost ; > tools/build/src/user-config.jam
  - cmd: echo boost.use-project ; >> tools/build/src/user-config.jam
  #- cmd: echo using msvc ; >> tools/build/src/user-config.jam
  #- cmd: echo using python ; >> tools/build/src/user-config.jam
  - cat tools/build/src/user-config.jam
  - ps: cd ..
  - hg clone https://bitbucket.org/eigen/eigen -r 3.2.8 EIGEN 
  #- cinst drmemory
  #- appveyor DownloadFile http://downloads.sourceforge.net/mingw-w64/x86_64-5.2.0-release-posix-seh-rt_v4-rev1.7z
  #- 7z x x86_64-5.2.0-release-posix-seh-rt_v4-rev1.7z > nul
  - set PATH=%PATH%;mingw64\bin  
before_build:
  - ps: cd "${env:APPVEYOR_BUILD_FOLDER}"
  - cmd: copy /Y NUL Jamroot # ATTRIB -R filename.ext
build_script:
  - echo %CD% %PATH% %BOOST_ROOT%
  - bjam toolset=msvc-14.0
#build:
#  parallel: true        # enable MSBuild parallel builds
#  project: "Script"     # path to Visual Studio solution or project
#  verbosity: detailed # quiet|minimal|normal|detailed

# to run your custom scripts instead of automatic tests
test_script:
  - echo This is my custom test script
# to disable automatic tests 
test: off
# run custom scripts before tests
before_test:
# run custom scripts after tests
after_test:
  
