#!/bin/bash

# $1: master - boost branch
# $2: https://github.com/boostorg/boost.git 
# $3: boost - directory name
# $4: CLANG_VER
# $5: optional GCC_VER


function full_clone() {
#    for i in $(sed -n 's/\[submodule "\(.*\)"\]/\1/p' .gitmodules | sort); do
#        spath=$(git config -f .gitmodules --get submodule.$i.path)
#        surl=$(git config -f .gitmodules --get submodule.$i.url)
#        git clone --depth 1 --branch $1 $surl $spath
#    done
#    git submodule update
    git submodule update --init --recursive
}

# $1: version of compiler
function create_user_config() {
    UCFILE=./tools/build/src/user-config.jam
    # parse version and generic compiler name from gcc-6 /CC string/
    #string="abc@hotmail.com;xyz@gmail.com;uvw@yahoo.com"
    #str1=${string%%;*}
    #str3=${string##*;}
    #temp=${string#$str1;}
    #str2=${temp#;$str3}
    COMP=${1%-*}    # $1 is $CC
    VERSION=${1##*-}
    # more tests to avoid nop update (to profit from caching)
    if ! grep -w ${COMP} ${UCFILE} ; then
       #echo > ${UCFILE} # create brand new
       if [ -n "${VERSION}" ] ; then
          echo "using ${COMP} : ${VERSION} : /usr/bin/${CXX} ;" >> ${UCFILE}
       else
          echo -n "Empty ${UCFILE}. Query version: "
          ${CC} --version
          ${CXX} --version
          echo "using ${COMP} : : /usr/bin/${CXX} ;" >> ${UCFILE}
       fi
    fi
    cat ${UCFILE}
}

function partial_clone() {
    for mod in chrono config function mpl ratio predef preprocessor smart_ptr system test throw_exception timer type_traits utility ;
    do
        git clone --depth 1 --branch $1 https://github.com/boostorg/${mod}.git libs/${mod}
    done
    
    git clone --depth 1 --branch $1 https://github.com/boostorg/build.git tools/build
    git clone --depth 1 --branch $1 https://github.com/boostorg/inspect.git tools/inspect
}
ls -l /usr/bin/${CC}*
if [ ! -d ${3}/.git ] ; then
    git clone --depth 1 --branch $1 $2 $3
    pushd $3
    git submodule init
    full_clone $1
#    partial_clone $1
    
    ./bootstrap.sh # use default toolset
    
    echo "compiler: ${CXX} compiler version: ${4}"
    create_user_config ${4} 
    #TOOLSET=${CC}-${4}
    TOOLSET=${CC}
    ./b2 toolset=${TOOLSET} headers
    ./b2 toolset=${TOOLSET} variant=debug chrono system unit_test_framework 
    
    popd
else
    echo "$3 dir already present"
fi

if [ ! -d EIGEN/.hg ] ; then
    hg clone https://bitbucket.org/eigen/eigen EIGEN
fi

if [ ! -d GSL/.git ] ; then
    git clone https://github.com/Microsoft/GSL.git
fi

