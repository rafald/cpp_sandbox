# Build matrix / environment variable are explained on:
# http://about.travis-ci.org/docs/user/build-configuration/
# This file can be validated on:
# http://lint.travis-ci.org/

#This job is running on container-based infrastructure, which does not allow use of 'sudo', setuid and setguid executables.
#If you require sudo, add 'sudo: required' to your .travis.yml
#See https://docs.travis-ci.com/user/workers/container-based-infrastructure/ for details.

branches:
  only:
    - master
    - develop

language: cpp

env:
  global:
  - CTEST_OUTPUT_ON_FAILURE=1

cache:
  ccache: true
  directories:
  - boost
  - EIGEN
  - GSL
  - $HOME/.ccache

# List of whitelisted in travis packages for ubuntu-precise can be found here:
#   https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
# List of whitelisted in travis apt-sources:
#   https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
matrix: 
  fast_finish: true
  include: 
    - 
      compiler: clang
      os: osx
      osx_image: xcode8.2
      sudo: false
#    - 
#      compiler: gcc
#      #env: CVER=4.8
#      os: osx
#      osx_image: xcode8.2
#      sudo: false
    - 
      addons: 
        apt: 
          packages: 
           - clang++-3.8
           - g++-6
           - clang-format-3.8
           - clang-tidy-3.8
           - lcov
           - valgrind
           - cmake
           - cmake-data
           - libopenmpi-dev
           - gcovr
          sources: 
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
      compiler: clang
      dist: trusty
      env: CVER=3.8
      os: linux
      sudo: required
    - 
      addons: 
        apt: 
          packages: 
           - g++-6
           - clang-format-3.8
           - clang-tidy-3.8
           - lcov
           - valgrind
           - cmake
           - cmake-data
           - libopenmpi-dev
           - gcovr
          sources: 
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
      compiler: gcc
      dist: trusty
      env: CVER=6
      os: linux
      sudo: required
      
before_install:

install: 
  # install lcov to coveralls conversion + upload tool
  - gem install coveralls-lcov

before_script:
  - ./travis_shallow-clone-and-bootstrap master https://github.com/boostorg/boost.git boost ${CVER}
  
script:
  - if [ ! -f Jamroot ] ; then touch Jamroot ; fi
  - BOOST_ROOT=./boost ./boost/bjam -d2 -j8 toolset=${CC}
  

after_success:
  - "echo 'RLD: SUCCESS'"
  - clang-tidy-3.8 src/* # TODO does not work
  - BOOST_ROOT=./boost scan-build-3.8 ./boost/bjam -j8 toolset=${CC} variant=release 
  # produce coveralls data 
  - lcov --directory . --zerocounters
  - BOOST_ROOT=./boost ./boost/bjam -j8 toolset=${CC} variant=coverage
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info 'tests/*' '/usr/*' '/boost/*' '/EIGEN/*' --output-file coverage.info # filter out system and test code
  - lcov --list coverage.info # debug before upload
  - coveralls-lcov coverage.info # uploads to coveralls  # --repo-token ${COVERALLS_TOKEN}

after_failure:
  - bash -c "echo 'RLD: failed\!'"
  
notifications:
  email:
    on_success: change
    on_failure: change # always

