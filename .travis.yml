#This job is running on container-based infrastructure, which does not allow use of 'sudo', setuid and setguid executables.
#If you require sudo, add 'sudo: required' to your .travis.yml
#See https://docs.travis-ci.com/user/workers/container-based-infrastructure/ for details.

sudo: required # false
dist: trusty
language: cpp
cache:
#  apt: true
  ccache: true
  directories:
  - boost
  - EIGEN
compiler:
  - gcc
  - clang
env:
global:
  - CTEST_OUTPUT_ON_FAILURE=1
matrix:
  - PROJECT=CPP_SANDBOX

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-5
    - g++-5
    - clang-3.6
    - cmake
    - cmake-data
    - libopenmpi-dev
    - gcovr

before_install:
#  - sudo apt-get remove gcc g++ -y # gcov is not available when this line is executed
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20
  - sudo update-alternatives --config gcc  
  - ${CC} --version # gcc (Ubuntu 5.3.0-3ubuntu1~14.04) 5.3.0 
  - ./travis_shallow-clone master https://github.com/boostorg/boost.git boost
  - ./travis_create_user-config g++-5 clang++-3.6 # configured gcc does not have any version - it is default
  - "echo 'test internal bash command'"
  
install: #TODO CACHE IT
#  - cd ${TRAVIS_BUILD_DIR}
  # install latest LCOV (1.9 was failing for me) [1]
  - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
  - tar xf lcov_1.11.orig.tar.gz
  - sudo make -C lcov-1.11/ install
  # install lcov to coveralls conversion + upload tool
  - gem install coveralls-lcov

before_script:
  - pushd boost ; ./bootstrap.sh --with-toolset=${CC}
  - ./b2 headers # ; ./b2 variant=debug chrono ; ./b2 variant=debug system ; ./b2 variant=debug unit_test_framework 
  - popd
  
script:
#  - cd ${TRAVIS_BUILD_DIR}  
  - touch Jamroot
  - BOOST_ROOT=./boost ./boost/bjam -d2 -j8 toolset=${CC}

after_success:
  - bash -c "echo 'RLD: SUCCESS'"
#  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --zerocounters
#  - cd ${TRAVIS_BUILD_DIR}
  - BOOST_ROOT=./boost ./boost/bjam -d2 -j8 toolset=${CC} variant=coverage
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info # filter out system and test code
  - lcov --list coverage.info # debug before upload
  - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info # uploads to coveralls

after_failure:
  - bash -c "echo 'RLD: failed\!'"
  