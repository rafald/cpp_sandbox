# Build matrix / environment variable are explained on:
# http://about.travis-ci.org/docs/user/build-configuration/
# This file can be validated on:
# http://lint.travis-ci.org/

#This job is running on container-based infrastructure, which does not allow use of 'sudo', setuid and setguid executables.
#If you require sudo, add 'sudo: required' to your .travis.yml
#See https://docs.travis-ci.com/user/workers/container-based-infrastructure/ for details.

sudo: required # false
dist: trusty
language: cpp
cache:
#  apt: true
  ccache: true
  directories:
  - boost
  - EIGEN
os:
  - linux
  - osx
compiler:
  - gcc
  - clang
env:
  global:
  - CTEST_OUTPUT_ON_FAILURE=1
  matrix:
    - PROJECT=CPP_SANDBOX
#    - GTEST_TARGET=googletest SHARED_LIB=OFF STATIC_LIB=ON CMAKE_PKG=OFF BUILD_TYPE=debug   VERBOSE_MAKE=true VERBOSE
#    - GTEST_TARGET=googlemock SHARED_LIB=OFF STATIC_LIB=ON CMAKE_PKG=OFF BUILD_TYPE=debug   VERBOSE_MAKE=true VERBOSE
#    - GTEST_TARGET=googlemock SHARED_LIB=OFF STATIC_LIB=ON CMAKE_PKG=OFF BUILD_TYPE=debug CXX_FLAGS=-std=c++11  VERBOSE_MAKE=true VERBOSE
##    - GTEST_TARGET=googletest SHARED_LIB=ON  STATIC_LIB=ON CMAKE_PKG=ON  BUILD_TYPE=release VERBOSE_MAKE=false
##    - GTEST_TARGET=googlemock SHARED_LIB=ON  STATIC_LIB=ON CMAKE_PKG=ON  BUILD_TYPE=release VERBOSE_MAKE=false

addons:
  apt:
    # List of whitelisted in travis packages for ubuntu-precise can be found here:
    #   https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
    # List of whitelisted in travis apt-sources:
    #   https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.7
    packages:
    - gcc-5
    - g++-5
    - clang-3.7
    - lcov
    - valgrind
    - cmake
    - cmake-data
    - libopenmpi-dev
    - gcovr

before_install:

install: 
# /usr/bin/gcc is 4.6 always, but gcc-X.Y is available.
  - if [ "$CXX" = "g++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="g++-5" CC="gcc-5"; fi
  - if [ "$CXX" = "g++" ] && [ "$TRAVIS_OS_NAME" = "osx" ]; then export CXX="g++-4.9" CC="gcc-4.9"; fi
# /usr/bin/clang is 3.4, lets override with modern one.
  - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
# install lcov to coveralls conversion + upload tool
  - gem install coveralls-lcov
#  - sudo apt-get remove g++-4.8 -y # gcov is not available when this line is executed
#  - sudo apt-get install lcov -y
#  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 20
#  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 20
#  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 20
#  - sudo update-alternatives --config gcc  
#  - sudo update-alternatives --config g++
#  - sudo update-alternatives --config gcov  
  - echo ${PATH}
  - echo ${CXX}
  - ${CC} --version # gcc (Ubuntu 5.3.0-3ubuntu1~14.04) 5.3.0
  - ${CXX} -v

before_script:
  - ${CC} --version # gcc (Ubuntu 5.3.0-3ubuntu1~14.04) 5.3.0
  - ./travis_shallow-clone-and-bootstrap master https://github.com/boostorg/boost.git boost
  - ./travis_create_user-config g++-5 clang++-3.7 # configured gcc does not have any version - it is default
  - lcov --directory . --zerocounters
  
script:
  - touch Jamroot
  - BOOST_ROOT=./boost ./boost/bjam -d2 -j8 toolset=${CC}

after_success:
  - "echo 'RLD: SUCCESS'"
  - BOOST_ROOT=./boost ./boost/bjam -d2 -j8 toolset=${CC} variant=coverage
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info 'tests/*' '/usr/*' '/boost/*' '/EIGEN/*' --output-file coverage.info # filter out system and test code
  - lcov --list coverage.info # debug before upload
  - coveralls-lcov coverage.info # uploads to coveralls  # --repo-token ${COVERALLS_TOKEN}

after_failure:
  - bash -c "echo 'RLD: failed\!'"
  
notifications:
  email: true
