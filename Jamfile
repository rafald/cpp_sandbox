


project 
        : usage-requirements 
                <include>.
                <cxxflags>"-std=c++1z "
        : requirements 
				<library>/boost//unit_test_framework
				<dependency>/boost//headers
                <cxxflags>"-std=c++1z "
                <include>EIGEN # /home/raf12/develop/c++/eigen
                #<linkflags>"-lcholmod -lmetis -lamd -lcamd -lccolamd -lcolamd -llapack -lgfortran -lblas "
;

unit-test test_dispatcher : test_dispatcher.cpp /site-config//zlib /site-config//librt /site-config//crypto /site-config//ssl ; 

run test_Eigen_QR.cpp ;

run ret_mult_values.cpp ;

rule explicit-unit-test ( target : source : properties * )
{
    unit-test $(target) : $(source) : $(properties) ;
    explicit $(target) ;
}
explicit-unit-test test_bind : test_bind.cpp 
	: <testing.launcher>"valgrind --leak-check=full --show-leak-kinds=all " # -v 
;

run tmpl_inst.cpp 
	: #args * 
	: #input-files * 
	: #requirements * 
		<cxxflags>"`pkg-config --cflags dbus-1`"
          	<linkflags>"`pkg-config --libs dbus-1`"
	: #target-name ?
	: #default-build * 
;
explicit tmpl_inst ;


explicit explicit_suite ;
test-suite explicit_suite
:
      [ run test_ct_hash.cpp ]
      [ run test_Eigen.cpp ]
;









# This Jamfile requires boost-build v2 to build.
# The version shipped with boost 1.34.0

import modules ;
import os ;
import errors ;
import feature : feature ;
import package ;
import virtual-target ;

if ! $(BOOST_ROOT)
{
    BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;
}
BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;


CXXFLAGS = [ modules.peek : CXXFLAGS ] ;
LDFLAGS = [ modules.peek : LDFLAGS ] ;

ECHO "BOOST_ROOT =" $(BOOST_ROOT) ;
ECHO "OS =" [ os.name ] ;

if $(BOOST_ROOT)
{
	use-project /boost : $(BOOST_ROOT) ;
}
